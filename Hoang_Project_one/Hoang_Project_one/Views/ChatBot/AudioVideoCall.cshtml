
@*<!doctype html>
<html>
<head>*@

    @*<script src="https://www.gstatic.com/firebasejs/5.0.4/firebase.js"></script>
    <link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/3.4.1/css/bootstrap.min.css">*@
    @*<script src="https://ajax.googleapis.com/ajax/libs/jquery/3.5.1/jquery.min.js"></script>
    <script src="https://maxcdn.bootstrapcdn.com/bootstrap/3.4.1/js/bootstrap.min.js"></script>
    <link href="https://cdnjs.cloudflare.com/ajax/libs/twitter-bootstrap/3.3.7/css/bootstrap.min.css" rel="stylesheet">*@

    @*<style type="text/css">
        video {
            background-color: #ddd;
            border-radius: 7px;
            margin: 10px 0px 0px 10px;
            width: 1000px;
            height: 240px;
        }

        button {
            margin: 5px 0px 0px 10px !important;
            width: 654px;
        }
    </style>*@


@*</head>*@


@*<body onload="showMyFace()">*@
    <div class="container"  onload="showMyFace()">
     
        <div class="modal-dialog">

            <div class="modal-content">
                <div class="modal-header">
                    <label id="minutes">00</label>
                    <label id="colon">:</label>
                    <label id="seconds">00</label>
                    <button type="button" class="close" data-dismiss="modal">&times;</button>
                </div>
                <div class="modal-body">

                    <video id="yourVideo" autoplay muted></video>


                    <video id="friendsVideo" autoplay></video>

                    
                </div>
               
                <div class="modal-footer">
                  
                   
                    <button style="border-radius: 50%;">
                        <svg xmlns="http://www.w3.org/2000/svg" width="40" height="50" fill="currentColor" class="bi bi-camera-video" viewBox="0 0 16 16" color="green">
                            <path fill-rule="evenodd" d="M0 5a2 2 0 0 1 2-2h7.5a2 2 0 0 1 1.983 1.738l3.11-1.382A1 1 0 0 1 16 4.269v7.462a1 1 0 0 1-1.406.913l-3.111-1.382A2 2 0 0 1 9.5 13H2a2 2 0 0 1-2-2V5zm11.5 5.175 3.5 1.556V4.269l-3.5 1.556v4.35zM2 4a1 1 0 0 0-1 1v6a1 1 0 0 0 1 1h7.5a1 1 0 0 0 1-1V5a1 1 0 0 0-1-1H2z" />
                        </svg>
                    </button>
                    <button style="border-radius: 50%;">
                        <svg xmlns="http://www.w3.org/2000/svg" width="40" height="50" fill="currentColor" class="bi bi-mic-fill" viewBox="0 0 16 16" color="gray">
                            <path d="M5 3a3 3 0 0 1 6 0v5a3 3 0 0 1-6 0V3z" />
                            <path d="M3.5 6.5A.5.5 0 0 1 4 7v1a4 4 0 0 0 8 0V7a.5.5 0 0 1 1 0v1a5 5 0 0 1-4.5 4.975V15h3a.5.5 0 0 1 0 1h-7a.5.5 0 0 1 0-1h3v-2.025A5 5 0 0 1 3 8V7a.5.5 0 0 1 .5-.5z" />
                        </svg>
                    </button>
                    <button data-dismiss="modal" style="border-radius: 50%;">
                        <svg xmlns="http://www.w3.org/2000/svg" width="40" height="50" fill="currentColor" class="bi bi-telephone-x" viewBox="0 0 16 16" color="red">
                            <path d="M3.654 1.328a.678.678 0 0 0-1.015-.063L1.605 2.3c-.483.484-.661 1.169-.45 1.77a17.568 17.568 0 0 0 4.168 6.608 17.569 17.569 0 0 0 6.608 4.168c.601.211 1.286.033 1.77-.45l1.034-1.034a.678.678 0 0 0-.063-1.015l-2.307-1.794a.678.678 0 0 0-.58-.122l-2.19.547a1.745 1.745 0 0 1-1.657-.459L5.482 8.062a1.745 1.745 0 0 1-.46-1.657l.548-2.19a.678.678 0 0 0-.122-.58L3.654 1.328zM1.884.511a1.745 1.745 0 0 1 2.612.163L6.29 2.98c.329.423.445.974.315 1.494l-.547 2.19a.678.678 0 0 0 .178.643l2.457 2.457a.678.678 0 0 0 .644.178l2.189-.547a1.745 1.745 0 0 1 1.494.315l2.306 1.794c.829.645.905 1.87.163 2.611l-1.034 1.034c-.74.74-1.846 1.065-2.877.702a18.634 18.634 0 0 1-7.01-4.42 18.634 18.634 0 0 1-4.42-7.009c-.362-1.03-.037-2.137.703-2.877L1.885.511z" />
                            <path fill-rule="evenodd" d="M11.146 1.646a.5.5 0 0 1 .708 0L13 2.793l1.146-1.147a.5.5 0 0 1 .708.708L13.707 3.5l1.147 1.146a.5.5 0 0 1-.708.708L13 4.207l-1.146 1.147a.5.5 0 0 1-.708-.708L12.293 3.5l-1.147-1.146a.5.5 0 0 1 0-.708z" />
                        </svg>
                    </button>
                </div>
            </div>
           
        </div>
        @*</div>*@

    </div>

  

    <!--<br />-->


    @*<button onclick="showFriendsFace()" type="button" class="btn btn-primary btn-lg"><span class="glyphicon glyphicon-facetime-video" aria-hidden="true"></span> Call</button>*@


    @*<script type="text/javascript">


        var config = {


            apiKey: " <API_KEY>",


            authDomain: " <PROJECT_ID>.firebaseapp.com",


            databaseURL: " https://<DATABASE_NAME>.firebaseio.com",


            projectId: " <PROJECT_ID>",


            storageBucket: " <BUCKET>.appspot.com",


            messagingSenderId: " <SENDER_ID>"


        };
        firebase.initializeApp(config);
        var database = firebase.database().ref();
        var yourVideo = document.getElementById("yourVideo");
        var friendsVideo = document.getElementById("friendsVideo");
        var yourId = Math.floor(Math.random() * 1000000000);
        var servers = { 'iceServers': [{ 'urls': 'stun:stun.services.mozilla.com' }, { 'urls': 'stun:stun.l.google.com:19302' }, { 'urls': 'turn:numb.viagenie.ca', 'credential': 'webrtc', 'username': 'websitebeaver@mail.com' }] };
        var pc = new RTCPeerConnection(servers);
        pc.onicecandidate = (event => event.candidate ? sendMessage(yourId, JSON.stringify({ 'ice': event.candidate })) : console.log("Sent All Ice"));
        pc.onaddstream = (event => friendsVideo.srcObject = event.stream);
        function sendMessage(senderId, data) {
            console.log(senderId);
            var msg = database.push({ sender: senderId, message: data });
            msg.remove();
        }
        function readMessage(data) {
            var msg = JSON.parse(data.val().message);
            console.log(msg);
            var sender = data.val().sender;
            if (sender != yourId) {
                if (msg.ice != undefined) {
                    pc.addIceCandidate(new RTCIceCandidate(msg.ice));
                }
                else if (msg.sdp.type == "offer") {
                    var r = confirm("Answer call?");
                    if (r == true) {
                        pc.setRemoteDescription(new RTCSessionDescription(msg.sdp))
                            .then(() => pc.createAnswer())
                            .then(answer => pc.setLocalDescription(answer))
                            .then(() => sendMessage(yourId, JSON.stringify({ 'sdp': pc.localDescription })));
                    } else {
                        alert("Rejected the call");
                    }
                }
                else if (msg.sdp.type == "answer") {
                    pc.setRemoteDescription(new RTCSessionDescription(msg.sdp));
                }
            }
        };
        database.on('child_added', readMessage);
        function showMyFace() {
            navigator.mediaDevices.getUserMedia({ audio: true, video: true })
                .then(stream => yourVideo.srcObject = stream)
                .then(stream => pc.addStream(stream));
        }
        function showFriendsFace() {
            pc.createOffer()
                .then(offer => pc.setLocalDescription(offer))
                .then(() => sendMessage(yourId, JSON.stringify({ 'sdp': pc.localDescription })));
        }
    </script>*@

@*</body>

</html>*@
